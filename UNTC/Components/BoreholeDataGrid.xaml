<UserControl x:Class="UNTC.Components.BoreholeDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:loc="clr-namespace:UNTC"
             xmlns:local="clr-namespace:UNTC.Components"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="450">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="331*"/>
            <RowDefinition Height="29*" MaxHeight="60"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="dg_Boreholes" Style="{DynamicResource DataGridStyle}" CellStyle="{DynamicResource DataGridCellStyle}" 
                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                      RowStyle="{DynamicResource DataGridRowStyle}"
                      Grid.Row="0" SelectedItem="{Binding SelectedBorehole, Mode=TwoWay}" SelectedIndex="{Binding SelectedBoreholeIndex, Mode=OneWayToSource}"
                      ItemsSource="{Binding Boreholes, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>

                <DataGridTextColumn Header="Название" Binding="{Binding Title}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Глубина, м" Binding="{Binding Depth}"/>
                <DataGridTextColumn Header="Плотность, кг/м3" Binding="{Binding Density}"/>

                <DataGridTemplateColumn Width="Auto" MinWidth="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 5 0">
                                <Button x:Name="editBtn" Style="{StaticResource DataGridButton}"
                                        Command="{Binding Path=DataContext.NavigationViewModel.NavigateEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                    <Icon:PackIconMaterial Kind="PencilOutline"
                                                               Style="{StaticResource ButtonIcon}"/>
                                </Button>
                                <Button x:Name="deleteBtn" Style="{StaticResource DataGridButton}"
                                        Command="{Binding Path=DataContext.DeleteBoreholeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                    <Icon:PackIconMaterial Kind="DeleteOutline"
                                                               Style="{StaticResource ButtonIcon}"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Button Grid.Row="2" Style="{StaticResource AddButton}"
                    Command="{Binding NavigationViewModel.NavigateAddCommand}">
            <Icon:PackIconMaterial Kind="Plus" Style="{StaticResource ButtonIcon}"/>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:ChangePropertyAction TargetObject="{Binding ElementName=dg_Boreholes}" 
                                            PropertyName="SelectedItem" Value="{x:Null}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>

    </Grid>
</UserControl>
